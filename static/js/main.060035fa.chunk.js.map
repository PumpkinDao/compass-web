{"version":3,"sources":["components/search-input/index.tsx","pages/mvp/header.tsx","pages/mvp/content.tsx","redux/pumpkin-api/index.ts","pages/mvp/index.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["Search","styled","Stack","theme","flexDirection","borderRadius","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","opacity","StyledInputBase","InputBase","color","padding","transition","transitions","create","SearchInput","placeholder","onSearchSubmit","useState","input","setInput","submit","useCallback","value","onChange","e","target","onKeyPress","key","IconButton","onClick","Header","selectedChainId","chains","onChainChanged","tabs","id","name","Box","sx","flexGrow","AppBar","position","boxShadow","Toolbar","fontSize","Array","isArray","length","Tabs","variant","_","tabId","map","i","Tab","label","marginRight","PoolFilterGroup","onFilterChanged","selectedId","setSelectedId","String","ToggleButtonGroup","exclusive","newVal","ToggleButton","DetailFilter","items","onItemSelectedOuter","onItemSelected","PLACEHOLDER","FormControl","InputLabel","Select","event","minWidth","MenuItem","fontStyle","DetailFilterGroup","tokens","tags","protocols","tag","setTag","searchProtocolIdsByTag","useMemo","reduce","acc","cur","forEach","Set","add","subProtocols","protocolIds","filter","has","direction","FiltersBlock","alignItems","justifyContent","DATA_COLUMNS","field","hide","headerName","flex","sortable","renderCell","params","pool","protocol","chain","Typography","fontWeight","marginTop","icon","src","alt","style","height","type","headerAlign","align","cellClassName","link","Link","href","underline","DataGridLoadingOverlay","top","LinearProgress","StyledDataGrid","DataGrid","minHeight","border","outline","display","visibility","DataBlock","pageIndex","pageSize","onPageSizeChanged","onPageIndexChange","isFetchingPools","poolsResult","onSortChanged","chainsLookup","protocolsLookup","rows","data","protocolId","chainId","tvl","apr","Number","toFixed","autoHeight","disableColumnFilter","disableColumnMenu","disableColumnSelector","disableDensitySelector","disableSelectionOnClick","density","rowHeight","showCellRightBorder","showColumnRightBorder","components","LoadingOverlay","sortingMode","onSortModelChange","sortItem","sort","pagination","paginationMode","page","onPageChange","onPageSizeChange","rowsPerPageOptions","rowCount","total","initialState","sorting","sortModel","loading","columns","Content","Container","maxWidth","NAMESPACE","transformResponse","response","result","index","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","endpoints","builder","ping","query","matrix","pools","args","uri","Object","assign","join","URLSearchParams","toString","reducer","middleware","useMatrixQuery","usePingQuery","useLazyPoolsQuery","INIT_POOLS_ARG","aprAsc","MVP","undefined","fromEntries","poolsArg","setPoolsArg","updatePoolsArg","oldVal","state","entries","v","fetchPools","isFetching","useEffect","setSelectedChainId","searchProtocolsByChain","chainIds","protocolIdsOnSelectedChain","lookup","toLowerCase","tagSet","keys","chainProtocols","chainTags","searchProtocolsByTag","filterType","val","from","sortType","tvlAsc","onPageIndexChanged","useBusiness","App","store","configureStore","pumpkinApi","getDefaultMiddleware","setupListeners","dispatch","darkModeTheme","createTheme","mode","primary","main","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.060035fa.chunk.js","sourcesContent":["import { alpha, IconButton, InputBase, Stack, styled } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useCallback, useState } from \"react\";\n\nconst Search = styled(Stack)(({ theme }) => ({\n  flexDirection: \"row\",\n  borderRadius: 50,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n  \"& .MuiButtonBase-root\": {\n    opacity: 0.5,\n  },\n  \"&:hover .MuiButtonBase-root, &.Mui-focused .MuiButtonBase-root\": {\n    opacity: 1,\n  },\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 0, 1, 2),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst SearchInput = ({\n  placeholder,\n  onSearchSubmit,\n}: {\n  placeholder: string;\n  onSearchSubmit: (value: string) => void;\n}) => {\n  const [input, setInput] = useState<string>(\"\");\n  const submit = useCallback(\n    () => onSearchSubmit(input),\n    [input, onSearchSubmit]\n  );\n\n  return (\n    <Search>\n      <StyledInputBase\n        placeholder={placeholder}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === \"Enter\" && submit()}\n      />\n      <IconButton onClick={submit}>\n        <SearchIcon />\n      </IconButton>\n    </Search>\n  );\n};\n\nexport default SearchInput;\n","import { AppBar, Box, Tab, Tabs, Toolbar } from \"@mui/material\";\nimport SearchInput from \"../../components/search-input\";\nimport ExploreOutlinedIcon from \"@mui/icons-material/ExploreOutlined\";\nimport { SingleMatrix } from \"../../redux/pumpkin-api/types\";\n\nconst Header = ({\n  selectedChainId,\n  chains,\n  onChainChanged,\n  onSearchSubmit,\n}: {\n  selectedChainId: string;\n  chains: Array<SingleMatrix>;\n  onChainChanged: (id: string) => void;\n  onSearchSubmit: (value: string) => void;\n}) => {\n  const tabs = [{ id: \"all\", name: \"All\" }, ...chains];\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar\n        position={\"static\"}\n        color={\"transparent\"}\n        sx={{ boxShadow: \"revert\" }}\n      >\n        <Toolbar>\n          <ExploreOutlinedIcon sx={{ fontSize: 50 }} />\n          <Box marginLeft={16} />\n          {Array.isArray(tabs) && tabs.length > 1 ? (\n            <Tabs\n              variant={\"fullWidth\"}\n              value={selectedChainId ? selectedChainId : \"all\"}\n              onChange={(_, tabId) =>\n                onChainChanged(tabId === \"all\" ? \"\" : tabId)\n              }\n            >\n              {tabs.map((i) => (\n                <Tab key={i.id} label={i.name} value={i.id} />\n              ))}\n            </Tabs>\n          ) : null}\n          <Box flexGrow={1} />\n          <SearchInput\n            placeholder={\"Search Protocols\"}\n            onSearchSubmit={onSearchSubmit}\n          />\n          <Box marginRight={8} />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","import {\n  Box,\n  Container,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  Link,\n  MenuItem,\n  Select,\n  Stack,\n  styled,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from \"@mui/material\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { DataGrid, GridColDef, GridOverlay } from \"@mui/x-data-grid\";\nimport { Pool, PoolsResult, SingleMatrix } from \"../../redux/pumpkin-api/types\";\n\ntype ContentProps = {\n  chainsLookup: Record<string, SingleMatrix>;\n  protocolsLookup: Record<string, SingleMatrix>;\n  selectedChainId: string;\n  tokens: Array<SingleMatrix>;\n  tags: Array<SingleMatrix>;\n  protocols: Array<SingleMatrix>;\n  onFilterChanged: (type: string, val: string) => void;\n  onSortChanged: (type: string, val: string) => void;\n  isFetchingPools: boolean;\n  poolsResult: PoolsResult | undefined;\n  pageIndex: number;\n  pageSize: number;\n  onPageSizeChanged: (pageSize: number) => void;\n  onPageIndexChange: (pageIndex: number) => void;\n};\n\nconst Content = ({\n  chainsLookup,\n  protocolsLookup,\n  selectedChainId,\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n  onSortChanged,\n  isFetchingPools,\n  poolsResult,\n  pageIndex,\n  pageSize,\n  onPageSizeChanged,\n  onPageIndexChange,\n}: ContentProps) => {\n  return (\n    <Container maxWidth={\"lg\"}>\n      <FiltersBlock\n        key={`filter-${selectedChainId}`}\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        onFilterChanged={onFilterChanged}\n      />\n      <Box marginTop={8} />\n      <DataBlock\n        pageIndex={pageIndex}\n        pageSize={pageSize}\n        onPageSizeChanged={onPageSizeChanged}\n        onPageIndexChange={onPageIndexChange}\n        isFetchingPools={isFetchingPools}\n        poolsResult={poolsResult}\n        onSortChanged={onSortChanged}\n        chainsLookup={chainsLookup}\n        protocolsLookup={protocolsLookup}\n      />\n    </Container>\n  );\n};\n\nconst PoolFilterGroup = ({\n  onFilterChanged,\n}: Pick<ContentProps, \"onFilterChanged\">) => {\n  const [selectedId, setSelectedId] = useState<string>(\"all\");\n  const onChange = useCallback(\n    (id: string) => {\n      setSelectedId(id);\n      onFilterChanged(\"singleTokenPool\", String(id === \"single\"));\n    },\n    [setSelectedId]\n  );\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={selectedId}\n      onChange={(_, newVal) => onChange(newVal)}\n    >\n      <ToggleButton value={\"all\"}>All</ToggleButton>\n      <ToggleButton value={\"single\"}>Single Token</ToggleButton>\n      <ToggleButton value={\"multi\"}>Multi Token</ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nconst DetailFilter = ({\n  label,\n  items,\n  onItemSelected: onItemSelectedOuter,\n}: {\n  label: string;\n  items: Array<SingleMatrix>;\n  onItemSelected: (id: string) => void;\n}) => {\n  const PLACEHOLDER = \"placeholder\";\n  items = [{ id: PLACEHOLDER, name: label }, ...items];\n  const [selectedId, setSelectedId] = useState<string>(\"\");\n\n  const onItemSelected = useCallback(\n    (id) => {\n      id = id === PLACEHOLDER ? \"\" : id;\n      setSelectedId(id);\n      onItemSelectedOuter(id);\n    },\n    [setSelectedId, onItemSelectedOuter]\n  );\n\n  return (\n    <FormControl>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selectedId}\n        label={label}\n        onChange={(event) => onItemSelected(event.target.value)}\n        sx={{ minWidth: 120 }}\n      >\n        {items.map((i) => (\n          <MenuItem\n            key={i.id}\n            value={i.id}\n            sx={{ fontStyle: i.id === PLACEHOLDER ? \"italic\" : \"inherit\" }}\n          >\n            {i.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nconst DetailFilterGroup = ({\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n}: Pick<ContentProps, \"tokens\" | \"tags\" | \"protocols\" | \"onFilterChanged\">) => {\n  const [tag, setTag] = useState<string>(\"\");\n\n  const searchProtocolIdsByTag = useMemo(() => {\n    return protocols.reduce<Record<string, Set<string>>>((acc, cur) => {\n      cur.tags?.forEach((tag) => {\n        if (!acc[tag]) {\n          acc[tag] = new Set();\n        }\n        acc[tag].add(cur.id);\n      });\n      return acc;\n    }, {});\n  }, [protocols]);\n\n  const subProtocols = useMemo(() => {\n    if (tag && protocols) {\n      const protocolIds = searchProtocolIdsByTag[tag];\n      return protocols.filter((i) => protocolIds.has(i.id));\n    } else {\n      return protocols;\n    }\n  }, [tag, searchProtocolIdsByTag, protocols]);\n\n  return (\n    <Stack direction={\"row\"} spacing={2}>\n      <DetailFilter\n        label={\"Token\"}\n        items={tokens}\n        onItemSelected={(id) => onFilterChanged(\"token\", id)}\n      />\n      <DetailFilter\n        label={\"Category\"}\n        items={tags}\n        onItemSelected={(id) => {\n          setTag(id);\n          onFilterChanged(\"tag\", id);\n        }}\n      />\n      <DetailFilter\n        key={`Protocols<${tag}>`}\n        label={\"Protocol\"}\n        items={subProtocols}\n        onItemSelected={(id) => onFilterChanged(\"protocol\", id)}\n      />\n    </Stack>\n  );\n};\n\nconst FiltersBlock = ({\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n}: Pick<ContentProps, \"tokens\" | \"tags\" | \"protocols\" | \"onFilterChanged\">) => {\n  return (\n    <Stack\n      direction={\"row\"}\n      alignItems={\"center\"}\n      justifyContent={\"space-between\"}\n    >\n      <PoolFilterGroup onFilterChanged={onFilterChanged} />\n      <DetailFilterGroup\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        onFilterChanged={onFilterChanged}\n      />\n    </Stack>\n  );\n};\n\nconst renderPoolCell: GridColDef[\"renderCell\"] = (params) => {\n  const {\n    pool,\n    protocol,\n    chain,\n  }: { pool: Pool; protocol: SingleMatrix; chain: SingleMatrix } =\n    params.value || {};\n\n  return (\n    <Stack>\n      <Typography fontSize={16} fontWeight={\"bold\"}>\n        {pool?.name || \"---\"}\n      </Typography>\n      <Box marginTop={\"3px\"} />\n      <Stack direction={\"row\"} alignItems={\"center\"}>\n        <Typography fontSize={14} fontWeight={\"bold\"}>\n          {protocol?.name || \"---\"}\n        </Typography>\n        <Box marginLeft={1} />\n        {chain?.icon && (\n          <img\n            src={chain.icon}\n            alt={chain.name}\n            style={{ width: 12, height: 12 }}\n          />\n        )}\n      </Stack>\n      <Box marginTop={\"3px\"} />\n      {Array.isArray(protocol?.tags) && protocol.tags.length > 0 && (\n        <Typography\n          fontSize={12}\n          fontWeight={\"bold\"}\n          sx={{ color: \"text.secondary\" }}\n        >\n          {protocol.tags[0]}\n        </Typography>\n      )}\n    </Stack>\n  );\n};\n\nconst renderLinkCell: GridColDef[\"renderCell\"] = (params) => {\n  const { link, name } = params.value || { link: \"#\", name: \"---\" };\n\n  return (\n    <Link href={link} target={\"_blank\"} underline={\"none\"}>\n      {name}\n    </Link>\n  );\n};\n\nconst DATA_COLUMNS: GridColDef[] = [\n  { field: \"id\", hide: true },\n  {\n    field: \"pool\",\n    headerName: \"POOL\",\n    flex: 3,\n    sortable: false,\n    renderCell: renderPoolCell,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    flex: 2,\n    type: \"number\",\n  },\n  {\n    field: \"apr\",\n    headerName: \"APR\",\n    flex: 2,\n    headerAlign: \"right\",\n    align: \"right\",\n    cellClassName: \"StyledDataGrid-cell-apr\",\n  },\n  {\n    field: \"link\",\n    headerName: \"LINK\",\n    flex: 3,\n    sortable: false,\n    headerAlign: \"right\",\n    align: \"right\",\n    renderCell: renderLinkCell,\n  },\n];\n\nconst DataGridLoadingOverlay = () => (\n  <GridOverlay>\n    <div style={{ position: \"absolute\", top: 0, width: \"100%\" }}>\n      <LinearProgress />\n    </div>\n  </GridOverlay>\n);\n\nconst StyledDataGrid = styled(DataGrid)(() => ({\n  minHeight: 600,\n  border: \"revert\",\n  \"& .MuiDataGrid-cell, & .MuiDataGrid-columnHeaders\": {\n    border: \"revert\",\n  },\n  \"& .MuiDataGrid-cell:focus, & .MuiDataGrid-columnHeader:focus, .MuiDataGrid-columnHeader:focus-within\":\n    {\n      outline: \"revert\",\n    },\n  \"& .MuiDataGrid-columnSeparator\": {\n    display: \"none\",\n  },\n  \"& .MuiDataGrid-columnHeader--alignRight .MuiDataGrid-columnHeaderTitleContainer\":\n    {\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n    },\n  \"& .MuiDataGrid-columnHeader .MuiDataGrid-iconButtonContainer, & .MuiDataGrid-columnHeader--sorted .MuiDataGrid-iconButtonContainer\":\n    {\n      width: \"auto\",\n      visibility: \"visible\",\n    },\n  \"& .MuiDataGrid-columnHeader:not(.MuiDataGrid-columnHeader--sorted) .MuiDataGrid-sortIcon\":\n    {\n      opacity: \"0.1\",\n    },\n\n  \"& .StyledDataGrid-cell-apr\": {\n    color: \"#56F00DD9\",\n  },\n}));\n\nconst DataBlock = ({\n  pageIndex,\n  pageSize,\n  onPageSizeChanged,\n  onPageIndexChange,\n  isFetchingPools,\n  poolsResult,\n  onSortChanged,\n  chainsLookup,\n  protocolsLookup,\n}: Pick<\n  ContentProps,\n  | \"pageIndex\"\n  | \"pageSize\"\n  | \"onPageSizeChanged\"\n  | \"onPageIndexChange\"\n  | \"isFetchingPools\"\n  | \"poolsResult\"\n  | \"onSortChanged\"\n  | \"chainsLookup\"\n  | \"protocolsLookup\"\n>) => {\n  const rows = useMemo(() => {\n    return (poolsResult?.data || []).map((pool) => ({\n      id: `${pool.protocolId}/${pool.chainId}/${pool.name}`,\n      pool: {\n        pool,\n        chain: chainsLookup[pool.chainId],\n        protocol: protocolsLookup[pool.protocolId],\n      },\n      tvl: pool.tvl,\n      apr: `${(Number(pool.apr) * 100).toFixed(2)}%`,\n      link: protocolsLookup[pool.protocolId],\n    }));\n  }, [poolsResult, chainsLookup, protocolsLookup]);\n\n  return (\n    <StyledDataGrid\n      autoHeight\n      disableColumnFilter\n      disableColumnMenu\n      disableColumnSelector\n      disableDensitySelector\n      disableSelectionOnClick\n      density={\"comfortable\"}\n      rowHeight={65}\n      showCellRightBorder={false}\n      showColumnRightBorder={false}\n      components={{\n        LoadingOverlay: DataGridLoadingOverlay,\n      }}\n      sortingMode={\"server\"}\n      onSortModelChange={([sortItem]) =>\n        onSortChanged(\n          sortItem?.field || \"\",\n          typeof sortItem?.sort === \"string\" ? sortItem.sort : \"\"\n        )\n      }\n      pagination\n      paginationMode={\"server\"}\n      page={pageIndex}\n      onPageChange={(page) => onPageIndexChange(page)}\n      pageSize={pageSize}\n      onPageSizeChange={onPageSizeChanged}\n      rowsPerPageOptions={[15, 35, 50]}\n      rowCount={poolsResult?.total || 0}\n      initialState={{\n        sorting: { sortModel: [{ field: \"apr\", sort: \"desc\" }] },\n      }}\n      loading={isFetchingPools}\n      columns={DATA_COLUMNS}\n      rows={rows}\n    />\n  );\n};\n\nexport default Content;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { MatrixResult, PoolsArg, PoolsResult } from \"./types\";\n\nexport const NAMESPACE = \"pumpkinApi\";\n\nconst transformResponse = <T>(response: { result: T }) => response.result;\n\nconst index = createApi({\n  reducerPath: NAMESPACE,\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_COMPASS_API_BASE_URL,\n  }),\n  endpoints: (builder) => ({\n    ping: builder.query<{ timestamp: number }, undefined>({\n      query: () => \"ping\",\n      transformResponse: transformResponse,\n    }),\n    matrix: builder.query<MatrixResult, undefined>({\n      query: () => \"matrix\",\n      transformResponse: transformResponse,\n    }),\n    pools: builder.query<PoolsResult, PoolsArg>({\n      query: (args: PoolsArg) => {\n        let uri = \"pools\";\n\n        if (typeof args === \"object\") {\n          Array.isArray(args.protocolId) &&\n            (args = Object.assign({}, args, {\n              protocolId: args.protocolId.join(\",\"),\n            }));\n\n          const params = new URLSearchParams(args as never);\n          uri += \"?\" + params.toString();\n        }\n\n        return uri;\n      },\n      transformResponse: transformResponse,\n    }),\n  }),\n});\n\nexport const {\n  reducer,\n  middleware,\n  usePingQuery,\n  useMatrixQuery,\n  useLazyPoolsQuery,\n} = index;\n","import { Box } from \"@mui/material\";\nimport Header from \"./header\";\nimport Content from \"./content\";\nimport { useLazyPoolsQuery, useMatrixQuery } from \"../../redux/pumpkin-api\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { PoolsArg } from \"../../redux/pumpkin-api/types\";\n\nconst INIT_POOLS_ARG: PoolsArg = {\n  pageIndex: 0,\n  pageSize: 15,\n  aprAsc: false,\n};\n\nconst useBusiness = () => {\n  const { data: matrix } = useMatrixQuery(undefined);\n  const { chains, tags, protocols } = matrix || {};\n\n  const [chainsLookup, protocolsLookup] = useMemo(\n    () => [\n      Object.fromEntries((chains || []).map((i) => [i.id, i])),\n      Object.fromEntries((protocols || []).map((i) => [i.id, i])),\n    ],\n    [chains, protocols]\n  );\n\n  const [poolsArg, setPoolsArg] = useState<PoolsArg>(INIT_POOLS_ARG);\n  const updatePoolsArg = useCallback(\n    (newVal: Partial<PoolsArg>) => {\n      setPoolsArg((oldVal) => {\n        let state = Object.assign({}, oldVal, newVal);\n        state = Object.fromEntries(\n          Object.entries(state).filter(\n            ([, v]) =>\n              !(typeof v === \"undefined\" || (typeof v === \"string\" && !v))\n          )\n        );\n        return state;\n      });\n    },\n    [setPoolsArg]\n  );\n  const [fetchPools, { data: poolsResult, isFetching: isFetchingPools }] =\n    useLazyPoolsQuery();\n\n  useEffect(() => {\n    fetchPools(poolsArg);\n  }, [poolsArg]);\n\n  const [selectedChainId, setSelectedChainId] = useState<string>(\"\");\n\n  const onChainChanged = useCallback(\n    (chainId: string) => {\n      setSelectedChainId(chainId);\n      updatePoolsArg({ chainId, protocolId: \"\" });\n    },\n    [setSelectedChainId, updatePoolsArg]\n  );\n\n  const searchProtocolsByChain = useMemo(() => {\n    return (protocols || []).reduce<Record<string, Set<string>>>((acc, cur) => {\n      cur.chainIds?.forEach((chainId) => {\n        if (!acc[chainId]) {\n          acc[chainId] = new Set();\n        }\n        acc[chainId].add(cur.id);\n      });\n\n      return acc;\n    }, {});\n  }, [protocols]);\n\n  const [chainProtocols, chainTags, searchProtocolsByTag] = useMemo(() => {\n    let subProtocols = protocols || [];\n\n    if (selectedChainId) {\n      const protocolIdsOnSelectedChain =\n        searchProtocolsByChain[selectedChainId];\n      protocolIdsOnSelectedChain &&\n        (subProtocols = subProtocols.filter((i) =>\n          protocolIdsOnSelectedChain.has(i.id)\n        ));\n    }\n\n    const lookup = subProtocols.reduce<Record<string, Set<string>>>(\n      (acc, cur) => {\n        cur.tags?.forEach((tag: string) => {\n          tag = tag.toLowerCase();\n          if (!acc[tag]) {\n            acc[tag] = new Set();\n          }\n          acc[tag].add(cur.id);\n        });\n        return acc;\n      },\n      {}\n    );\n\n    const tagSet = new Set(Object.keys(lookup));\n    const subTags = (tags || []).filter((i) => tagSet.has(i.id));\n\n    return [subProtocols, subTags, lookup];\n  }, [selectedChainId, searchProtocolsByChain, protocols, tags]);\n\n  const onFilterChanged = useCallback(\n    (filterType: string, val: string) => {\n      if (filterType === \"tag\") {\n        const protocolIds = Array.from(searchProtocolsByTag[val] || []);\n        updatePoolsArg({ protocolId: protocolIds });\n      } else if (filterType === \"protocol\") {\n        updatePoolsArg({ protocolId: val });\n      }\n    },\n    [updatePoolsArg, searchProtocolsByTag]\n  );\n\n  const onSortChanged = useCallback(\n    (sortType: string, val: string) => {\n      let aprAsc: boolean | undefined = undefined;\n      let tvlAsc: boolean | undefined = undefined;\n\n      if (sortType === \"apr\") {\n        aprAsc = val === \"asc\";\n      } else if (sortType === \"tvl\") {\n        tvlAsc = val === \"asc\";\n      }\n      updatePoolsArg({ aprAsc: aprAsc, tvlAsc });\n    },\n    [updatePoolsArg]\n  );\n\n  const onPageIndexChanged = useCallback(\n    (pageIndex) => {\n      updatePoolsArg({ pageIndex });\n    },\n    [updatePoolsArg]\n  );\n\n  const onPageSizeChanged = useCallback(\n    (pageSize) => {\n      updatePoolsArg({ pageSize });\n    },\n    [updatePoolsArg]\n  );\n\n  const onSearchSubmit = useCallback(\n    (protocolId: string) => {\n      protocolId = protocolId || \"\";\n      protocolId = protocolId.toLowerCase();\n      updatePoolsArg({ protocolId });\n    },\n    [updatePoolsArg]\n  );\n\n  return {\n    chainsLookup,\n    protocolsLookup,\n    selectedChainId,\n    chains: chains || [],\n    tokens: [],\n    tags: chainTags,\n    protocols: chainProtocols,\n    isFetchingPools,\n    poolsResult,\n    onChainChanged,\n    onFilterChanged,\n    onSortChanged,\n    pageIndex: poolsArg?.pageIndex || 0,\n    pageSize: poolsArg?.pageSize || 25,\n    onPageSizeChanged,\n    onPageIndexChanged,\n    onSearchSubmit,\n  };\n};\n\nconst MVP = () => {\n  const {\n    chainsLookup,\n    protocolsLookup,\n    selectedChainId,\n    chains,\n    tokens,\n    tags,\n    protocols,\n    isFetchingPools,\n    poolsResult,\n    onChainChanged,\n    onFilterChanged,\n    onSortChanged,\n    pageIndex,\n    pageSize,\n    onPageSizeChanged,\n    onPageIndexChanged,\n    onSearchSubmit,\n  } = useBusiness();\n\n  return (\n    <>\n      <Header\n        selectedChainId={selectedChainId}\n        chains={chains || []}\n        onChainChanged={onChainChanged}\n        onSearchSubmit={onSearchSubmit}\n      />\n      <Box marginTop={16} />\n      <Content\n        chainsLookup={chainsLookup}\n        protocolsLookup={protocolsLookup}\n        selectedChainId={selectedChainId}\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        isFetchingPools={isFetchingPools}\n        poolsResult={poolsResult}\n        onFilterChanged={onFilterChanged}\n        onSortChanged={onSortChanged}\n        pageIndex={pageIndex}\n        pageSize={pageSize}\n        onPageIndexChange={onPageIndexChanged}\n        onPageSizeChanged={onPageSizeChanged}\n      />\n    </>\n  );\n};\n\nexport default MVP;\n","import React from \"react\";\nimport MVP from \"./pages/mvp\";\n\nfunction App() {\n  return <MVP />;\n}\n\nexport default App;\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport * as pumpkinApi from \"./pumpkin-api\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\n\nexport const store = configureStore({\n  reducer: {\n    [pumpkinApi.NAMESPACE]: pumpkinApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    pumpkinApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { store } from \"./redux/store\";\n\nconst darkModeTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#1890FF\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={darkModeTheme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}