{"version":3,"sources":["components/search-input/index.tsx","pages/mvp/header.tsx","pages/mvp/content.tsx","redux/pumpkin-api/index.ts","pages/mvp/index.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["Search","styled","Stack","theme","flexDirection","borderRadius","backgroundColor","alpha","palette","common","white","marginLeft","width","breakpoints","up","spacing","opacity","StyledInputBase","InputBase","color","padding","transition","transitions","create","SearchInput","placeholder","onSearchSubmit","useState","input","setInput","submit","useCallback","value","onChange","e","target","onKeyPress","key","IconButton","onClick","Header","selectedChainId","chains","onChainChanged","tabs","id","name","Box","sx","flexGrow","AppBar","position","boxShadow","Toolbar","fontSize","display","justifyContent","alignItems","marginRight","Array","isArray","length","Tabs","_","tabId","map","i","Tab","label","PoolFilterGroup","onFilterChanged","selectedId","setSelectedId","ToggleButtonGroup","exclusive","newVal","ToggleButton","DetailFilter","items","onItemSelectedOuter","onItemSelected","PLACEHOLDER","FormControl","InputLabel","Select","event","minWidth","MenuItem","fontStyle","DetailFilterGroup","tokens","tags","protocols","tag","setTag","searchProtocolIdsByTag","useMemo","reduce","acc","cur","forEach","toLowerCase","Set","add","subProtocols","protocolIds","filter","has","direction","FiltersBlock","DATA_COLUMNS","field","hide","headerName","flex","sortable","renderCell","params","pool","protocol","chain","aria-label","createdAt","Typography","marginTop","icon","src","alt","style","height","fontWeight","type","tvl","Number","isFinite","variant","toLocaleString","headerAlign","align","cellClassName","link","Link","href","underline","DataGridLoadingOverlay","top","LinearProgress","StyledDataGrid","DataGrid","minHeight","border","outline","visibility","DataBlock","pageIndex","pageSize","onPageSizeChanged","onPageIndexChange","isFetchingPools","poolsResult","onSortChanged","chainsLookup","protocolsLookup","rows","data","protocolId","chainId","invest_token","investTokens","join","apy","toFixed","autoHeight","disableColumnFilter","disableColumnMenu","disableColumnSelector","disableDensitySelector","disableSelectionOnClick","density","rowHeight","showCellRightBorder","showColumnRightBorder","components","LoadingOverlay","sortingMode","onSortModelChange","sortItem","sort","pagination","paginationMode","page","onPageChange","onPageSizeChange","rowsPerPageOptions","rowCount","total","initialState","sorting","sortModel","loading","columns","Content","Container","maxWidth","NAMESPACE","transformResponse","response","result","index","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","endpoints","builder","ping","query","matrix","pools","args","uri","Object","assign","URLSearchParams","toString","reducer","middleware","useMatrixQuery","usePingQuery","useLazyPoolsQuery","INIT_POOLS_ARG","apyAsc","MVP","undefined","fromEntries","poolsArg","setPoolsArg","updatePoolsArg","oldVal","state","entries","v","fetchPools","isFetching","useEffect","setSelectedChainId","searchProtocolsByChain","chainIds","protocolIdsOnSelectedChain","lookup","tagSet","keys","chainProtocols","chainTags","searchProtocolsByTag","filterType","val","from","investTokenType","sortType","tvlAsc","onPageIndexChanged","useBusiness","marginBottom","App","store","configureStore","pumpkinApi","getDefaultMiddleware","setupListeners","dispatch","darkModeTheme","createTheme","mode","primary","main","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d37402a3.chunk.js","sourcesContent":["import { alpha, IconButton, InputBase, Stack, styled } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useCallback, useState } from \"react\";\n\nconst Search = styled(Stack)(({ theme }) => ({\n  flexDirection: \"row\",\n  borderRadius: 50,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    marginLeft: theme.spacing(1),\n    width: \"auto\",\n  },\n  \"& .MuiButtonBase-root\": {\n    opacity: 0.5,\n  },\n  \"&:hover .MuiButtonBase-root, &.Mui-focused .MuiButtonBase-root\": {\n    opacity: 1,\n  },\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 0, 1, 2),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"15ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nconst SearchInput = ({\n  placeholder,\n  onSearchSubmit,\n}: {\n  placeholder: string;\n  onSearchSubmit: (value: string) => void;\n}) => {\n  const [input, setInput] = useState<string>(\"\");\n  const submit = useCallback(\n    () => onSearchSubmit(input),\n    [input, onSearchSubmit]\n  );\n\n  return (\n    <Search>\n      <StyledInputBase\n        placeholder={placeholder}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyPress={(e) => e.key === \"Enter\" && submit()}\n      />\n      <IconButton onClick={submit}>\n        <SearchIcon />\n      </IconButton>\n    </Search>\n  );\n};\n\nexport default SearchInput;\n","import { AppBar, Box, Tab, Tabs, Toolbar } from \"@mui/material\";\nimport SearchInput from \"../../components/search-input\";\nimport ExploreOutlinedIcon from \"@mui/icons-material/ExploreOutlined\";\nimport { SingleMatrix } from \"../../redux/pumpkin-api/types\";\n\nconst Header = ({\n  selectedChainId,\n  chains,\n  onChainChanged,\n  onSearchSubmit,\n}: {\n  selectedChainId: string;\n  chains: Array<SingleMatrix>;\n  onChainChanged: (id: string) => void;\n  onSearchSubmit: (value: string) => void;\n}) => {\n  const tabs = [{ id: \"all\", name: \"All\" }, ...chains];\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar\n        position={\"static\"}\n        color={\"transparent\"}\n        sx={{ boxShadow: \"revert\" }}\n      >\n        <Toolbar>\n          <ExploreOutlinedIcon sx={{ fontSize: 50 }} />\n          <Box\n            flexGrow={1}\n            display={\"flex\"}\n            justifyContent={\"center\"}\n            alignItems={\"center\"}\n            sx={{ marginLeft: 16, marginRight: 16 }}\n          >\n            {Array.isArray(tabs) && tabs.length > 1 ? (\n              <Tabs\n                value={selectedChainId ? selectedChainId : \"all\"}\n                onChange={(_, tabId) =>\n                  onChainChanged(tabId === \"all\" ? \"\" : tabId)\n                }\n              >\n                {tabs.map((i) => (\n                  <Tab key={i.id} label={i.name} value={i.id} />\n                ))}\n              </Tabs>\n            ) : null}\n          </Box>\n          <SearchInput\n            placeholder={\"Search Protocols\"}\n            onSearchSubmit={onSearchSubmit}\n          />\n          <Box marginRight={8} />\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default Header;\n","import {\n  Box,\n  Container,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  Link,\n  MenuItem,\n  Select,\n  Stack,\n  styled,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from \"@mui/material\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { DataGrid, GridColDef, GridOverlay } from \"@mui/x-data-grid\";\nimport { Pool, PoolsResult, SingleMatrix } from \"../../redux/pumpkin-api/types\";\n\ntype ContentProps = {\n  chainsLookup: Record<string, SingleMatrix>;\n  protocolsLookup: Record<string, SingleMatrix>;\n  selectedChainId: string;\n  tokens: Array<SingleMatrix>;\n  tags: Array<SingleMatrix>;\n  protocols: Array<SingleMatrix>;\n  onFilterChanged: (type: string, val: string) => void;\n  onSortChanged: (type: string, val: string) => void;\n  isFetchingPools: boolean;\n  poolsResult: PoolsResult | undefined;\n  pageIndex: number;\n  pageSize: number;\n  onPageSizeChanged: (pageSize: number) => void;\n  onPageIndexChange: (pageIndex: number) => void;\n};\n\nconst Content = ({\n  chainsLookup,\n  protocolsLookup,\n  selectedChainId,\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n  onSortChanged,\n  isFetchingPools,\n  poolsResult,\n  pageIndex,\n  pageSize,\n  onPageSizeChanged,\n  onPageIndexChange,\n}: ContentProps) => {\n  return (\n    <Container maxWidth={\"lg\"}>\n      <FiltersBlock\n        key={`filter-${selectedChainId}`}\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        onFilterChanged={onFilterChanged}\n      />\n      <Box marginTop={8} />\n      <DataBlock\n        pageIndex={pageIndex}\n        pageSize={pageSize}\n        onPageSizeChanged={onPageSizeChanged}\n        onPageIndexChange={onPageIndexChange}\n        isFetchingPools={isFetchingPools}\n        poolsResult={poolsResult}\n        onSortChanged={onSortChanged}\n        chainsLookup={chainsLookup}\n        protocolsLookup={protocolsLookup}\n      />\n    </Container>\n  );\n};\n\nconst PoolFilterGroup = ({\n  onFilterChanged,\n}: Pick<ContentProps, \"onFilterChanged\">) => {\n  const [selectedId, setSelectedId] = useState<string>(\"all\");\n  const onChange = useCallback(\n    (id: string) => {\n      setSelectedId(id);\n      onFilterChanged(\"investTokenType\", id === \"all\" ? \"\" : id);\n    },\n    [setSelectedId]\n  );\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={selectedId}\n      onChange={(_, newVal) => onChange(newVal)}\n    >\n      <ToggleButton value={\"all\"}>All</ToggleButton>\n      <ToggleButton value={\"single\"}>Single Token</ToggleButton>\n      <ToggleButton value={\"multi\"}>Multi Token</ToggleButton>\n    </ToggleButtonGroup>\n  );\n};\n\nconst DetailFilter = ({\n  label,\n  items,\n  onItemSelected: onItemSelectedOuter,\n}: {\n  label: string;\n  items: Array<SingleMatrix>;\n  onItemSelected: (id: string) => void;\n}) => {\n  const PLACEHOLDER = \"placeholder\";\n  items = [{ id: PLACEHOLDER, name: label }, ...items];\n  const [selectedId, setSelectedId] = useState<string>(\"\");\n\n  const onItemSelected = useCallback(\n    (id) => {\n      id = id === PLACEHOLDER ? \"\" : id;\n      setSelectedId(id);\n      onItemSelectedOuter(id);\n    },\n    [setSelectedId, onItemSelectedOuter]\n  );\n\n  return (\n    <FormControl>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selectedId}\n        label={label}\n        onChange={(event) => onItemSelected(event.target.value)}\n        sx={{ minWidth: 120 }}\n      >\n        {items.map((i) => (\n          <MenuItem\n            key={i.id}\n            value={i.id}\n            sx={{ fontStyle: i.id === PLACEHOLDER ? \"italic\" : \"inherit\" }}\n          >\n            {i.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nconst DetailFilterGroup = ({\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n}: Pick<ContentProps, \"tokens\" | \"tags\" | \"protocols\" | \"onFilterChanged\">) => {\n  const [tag, setTag] = useState<string>(\"\");\n\n  const searchProtocolIdsByTag = useMemo(() => {\n    return protocols.reduce<Record<string, Set<string>>>((acc, cur) => {\n      cur.tags?.forEach((tag: string) => {\n        tag = tag.toLowerCase();\n        if (!acc[tag]) {\n          acc[tag] = new Set();\n        }\n        acc[tag].add(cur.id);\n      });\n      return acc;\n    }, {});\n  }, [protocols]);\n\n  const subProtocols = useMemo(() => {\n    if (tag && protocols) {\n      const protocolIds = searchProtocolIdsByTag[tag];\n      return protocols.filter((i) => protocolIds.has(i.id));\n    } else {\n      return protocols;\n    }\n  }, [tag, searchProtocolIdsByTag, protocols]);\n\n  return (\n    <Stack direction={\"row\"} spacing={2}>\n      <Box display={\"none\"}>\n        <DetailFilter\n          label={\"Token\"}\n          items={tokens}\n          onItemSelected={(id) => onFilterChanged(\"token\", id)}\n        />\n      </Box>\n      <DetailFilter\n        label={\"Category\"}\n        items={tags}\n        onItemSelected={(id) => {\n          setTag(id);\n          onFilterChanged(\"tag\", id);\n        }}\n      />\n      <DetailFilter\n        key={`Protocols<${tag}>`}\n        label={\"Protocol\"}\n        items={subProtocols}\n        onItemSelected={(id) => onFilterChanged(\"protocol\", id)}\n      />\n    </Stack>\n  );\n};\n\nconst FiltersBlock = ({\n  tokens,\n  tags,\n  protocols,\n  onFilterChanged,\n}: Pick<ContentProps, \"tokens\" | \"tags\" | \"protocols\" | \"onFilterChanged\">) => {\n  return (\n    <Stack\n      direction={\"row\"}\n      alignItems={\"center\"}\n      justifyContent={\"space-between\"}\n    >\n      <PoolFilterGroup onFilterChanged={onFilterChanged} />\n      <DetailFilterGroup\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        onFilterChanged={onFilterChanged}\n      />\n    </Stack>\n  );\n};\n\nconst renderPoolCell: GridColDef[\"renderCell\"] = (params) => {\n  const {\n    pool,\n    protocol,\n    chain,\n  }: { pool: Pool; protocol: SingleMatrix; chain: SingleMatrix } =\n    params.value || {};\n\n  return (\n    <Stack aria-label={`pool-updated-at-${pool.createdAt}`}>\n      <Typography fontSize={16}>{pool?.name || \"---\"}</Typography>\n      <Box marginTop={\"3px\"} />\n      <Stack direction={\"row\"} alignItems={\"center\"}>\n        <Typography fontSize={14}>{protocol?.name || \"---\"}</Typography>\n        <Box marginLeft={1} />\n        {chain?.icon && (\n          <img\n            src={chain.icon}\n            alt={chain.name}\n            style={{ width: 12, height: 12 }}\n          />\n        )}\n      </Stack>\n      <Box marginTop={\"3px\"} />\n      {Array.isArray(protocol?.tags) && protocol.tags.length > 0 && (\n        <Typography\n          fontSize={12}\n          fontWeight={\"bold\"}\n          sx={{ color: \"text.secondary\" }}\n        >\n          {protocol.tags[0]}\n        </Typography>\n      )}\n    </Stack>\n  );\n};\n\nconst renderLinkCell: GridColDef[\"renderCell\"] = (params) => {\n  const { link, name } = params.value || { link: \"#\", name: \"---\" };\n\n  return (\n    <Link href={link} target={\"_blank\"} underline={\"none\"}>\n      {name}\n    </Link>\n  );\n};\n\nconst renderTVLCell: GridColDef[\"renderCell\"] = (params) => {\n  const value = params.value || 0;\n  const tvl =\n    typeof value === \"number\" && Number.isFinite(value) && value >= 0\n      ? value\n      : 0;\n  return <Typography variant={\"inherit\"}>${tvl.toLocaleString()}</Typography>;\n};\n\nconst DATA_COLUMNS: GridColDef[] = [\n  { field: \"id\", hide: true },\n  {\n    field: \"pool\",\n    headerName: \"POOL\",\n    flex: 4,\n    sortable: false,\n    renderCell: renderPoolCell,\n  },\n  {\n    field: \"invest_token\",\n    headerName: \"Invest Token\",\n    flex: 4,\n    sortable: false,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    flex: 2,\n    type: \"number\",\n    renderCell: renderTVLCell,\n  },\n  {\n    field: \"apy\",\n    headerName: \"APY\",\n    flex: 2,\n    headerAlign: \"right\",\n    align: \"right\",\n    cellClassName: \"StyledDataGrid-cell-apy\",\n  },\n  {\n    field: \"link\",\n    headerName: \"LINK\",\n    flex: 3,\n    sortable: false,\n    headerAlign: \"right\",\n    align: \"right\",\n    renderCell: renderLinkCell,\n  },\n];\n\nconst DataGridLoadingOverlay = () => (\n  <GridOverlay>\n    <div style={{ position: \"absolute\", top: 0, width: \"100%\" }}>\n      <LinearProgress />\n    </div>\n  </GridOverlay>\n);\n\nconst StyledDataGrid = styled(DataGrid)(() => ({\n  minHeight: 600,\n  border: \"revert\",\n  \"& .MuiDataGrid-cell, & .MuiDataGrid-columnHeaders\": {\n    border: \"revert\",\n  },\n  \"& .MuiDataGrid-cell:focus, & .MuiDataGrid-columnHeader:focus, .MuiDataGrid-columnHeader:focus-within\":\n    {\n      outline: \"revert\",\n    },\n  \"& .MuiDataGrid-columnSeparator\": {\n    display: \"none\",\n  },\n  \"& .MuiDataGrid-columnHeader--alignRight .MuiDataGrid-columnHeaderTitleContainer\":\n    {\n      flexDirection: \"row\",\n      justifyContent: \"flex-end\",\n    },\n  \"& .MuiDataGrid-columnHeader .MuiDataGrid-iconButtonContainer, & .MuiDataGrid-columnHeader--sorted .MuiDataGrid-iconButtonContainer\":\n    {\n      width: \"auto\",\n      visibility: \"visible\",\n    },\n  \"& .MuiDataGrid-columnHeader:not(.MuiDataGrid-columnHeader--sorted) .MuiDataGrid-sortIcon\":\n    {\n      opacity: \"0.1\",\n    },\n\n  \"& .StyledDataGrid-cell-apy\": {\n    color: \"#56F00DD9\",\n  },\n}));\n\nconst DataBlock = ({\n  pageIndex,\n  pageSize,\n  onPageSizeChanged,\n  onPageIndexChange,\n  isFetchingPools,\n  poolsResult,\n  onSortChanged,\n  chainsLookup,\n  protocolsLookup,\n}: Pick<\n  ContentProps,\n  | \"pageIndex\"\n  | \"pageSize\"\n  | \"onPageSizeChanged\"\n  | \"onPageIndexChange\"\n  | \"isFetchingPools\"\n  | \"poolsResult\"\n  | \"onSortChanged\"\n  | \"chainsLookup\"\n  | \"protocolsLookup\"\n>) => {\n  const rows = useMemo(() => {\n    return (poolsResult?.data || []).map((pool) => ({\n      id: `${pool.protocolId}/${pool.chainId}/${pool.name}`,\n      pool: {\n        pool,\n        chain: chainsLookup[pool.chainId],\n        protocol: protocolsLookup[pool.protocolId],\n      },\n      invest_token:\n        pool.investTokens\n          ?.map((i) => (typeof i === \"string\" && i ? i : \"UNKNOWN\"))\n          .join(\", \") || \"UNKNOWN\",\n      tvl: pool.tvl,\n      apy: `${(Number(pool.apy) * 100).toFixed(2)}%`,\n      link: protocolsLookup[pool.protocolId],\n    }));\n  }, [poolsResult, chainsLookup, protocolsLookup]);\n\n  return (\n    <StyledDataGrid\n      autoHeight\n      disableColumnFilter\n      disableColumnMenu\n      disableColumnSelector\n      disableDensitySelector\n      disableSelectionOnClick\n      density={\"comfortable\"}\n      rowHeight={65}\n      showCellRightBorder={false}\n      showColumnRightBorder={false}\n      components={{\n        LoadingOverlay: DataGridLoadingOverlay,\n      }}\n      sortingMode={\"server\"}\n      onSortModelChange={([sortItem]) =>\n        onSortChanged(\n          sortItem?.field || \"\",\n          typeof sortItem?.sort === \"string\" ? sortItem.sort : \"\"\n        )\n      }\n      pagination\n      paginationMode={\"server\"}\n      page={pageIndex}\n      onPageChange={(page) => onPageIndexChange(page)}\n      pageSize={pageSize}\n      onPageSizeChange={onPageSizeChanged}\n      rowsPerPageOptions={[15, 35, 50]}\n      rowCount={poolsResult?.total || 0}\n      initialState={{\n        sorting: { sortModel: [{ field: \"apy\", sort: \"desc\" }] },\n      }}\n      loading={isFetchingPools}\n      columns={DATA_COLUMNS}\n      rows={rows}\n    />\n  );\n};\n\nexport default Content;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { MatrixResult, PoolsArg, PoolsResult } from \"./types\";\n\nexport const NAMESPACE = \"pumpkinApi\";\n\nconst transformResponse = <T>(response: { result: T }) => response.result;\n\nconst index = createApi({\n  reducerPath: NAMESPACE,\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_COMPASS_API_BASE_URL,\n  }),\n  endpoints: (builder) => ({\n    ping: builder.query<{ timestamp: number }, undefined>({\n      query: () => \"ping\",\n      transformResponse: transformResponse,\n    }),\n    matrix: builder.query<MatrixResult, undefined>({\n      query: () => \"matrix\",\n      transformResponse: transformResponse,\n    }),\n    pools: builder.query<PoolsResult, PoolsArg>({\n      query: (args: PoolsArg) => {\n        let uri = \"pools\";\n\n        if (typeof args === \"object\") {\n          Array.isArray(args.protocolId) &&\n            (args = Object.assign({}, args, {\n              protocolId: args.protocolId.join(\",\"),\n            }));\n\n          const params = new URLSearchParams(args as never);\n          uri += \"?\" + params.toString();\n        }\n\n        return uri;\n      },\n      transformResponse: transformResponse,\n    }),\n  }),\n});\n\nexport const {\n  reducer,\n  middleware,\n  usePingQuery,\n  useMatrixQuery,\n  useLazyPoolsQuery,\n} = index;\n","import { Box } from \"@mui/material\";\nimport Header from \"./header\";\nimport Content from \"./content\";\nimport { useLazyPoolsQuery, useMatrixQuery } from \"../../redux/pumpkin-api\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { PoolsArg } from \"../../redux/pumpkin-api/types\";\n\nconst INIT_POOLS_ARG: PoolsArg = {\n  pageIndex: 0,\n  pageSize: 15,\n  apyAsc: false,\n};\n\nconst useBusiness = () => {\n  const { data: matrix } = useMatrixQuery(undefined);\n  const { chains, tags, protocols } = matrix || {};\n\n  const [chainsLookup, protocolsLookup] = useMemo(\n    () => [\n      Object.fromEntries((chains || []).map((i) => [i.id, i])),\n      Object.fromEntries((protocols || []).map((i) => [i.id, i])),\n    ],\n    [chains, protocols]\n  );\n\n  const [poolsArg, setPoolsArg] = useState<PoolsArg>(INIT_POOLS_ARG);\n  const updatePoolsArg = useCallback(\n    (newVal: Partial<PoolsArg>) => {\n      setPoolsArg((oldVal) => {\n        let state = Object.assign({}, oldVal, newVal);\n        state = Object.fromEntries(\n          Object.entries(state).filter(\n            ([, v]) =>\n              !(typeof v === \"undefined\" || (typeof v === \"string\" && !v))\n          )\n        );\n        return state;\n      });\n    },\n    [setPoolsArg]\n  );\n  const [fetchPools, { data: poolsResult, isFetching: isFetchingPools }] =\n    useLazyPoolsQuery();\n\n  useEffect(() => {\n    fetchPools(poolsArg);\n  }, [poolsArg]);\n\n  const [selectedChainId, setSelectedChainId] = useState<string>(\"\");\n\n  const onChainChanged = useCallback(\n    (chainId: string) => {\n      setSelectedChainId(chainId);\n      updatePoolsArg({ chainId, protocolId: \"\" });\n    },\n    [setSelectedChainId, updatePoolsArg]\n  );\n\n  const searchProtocolsByChain = useMemo(() => {\n    return (protocols || []).reduce<Record<string, Set<string>>>((acc, cur) => {\n      cur.chainIds?.forEach((chainId) => {\n        if (!acc[chainId]) {\n          acc[chainId] = new Set();\n        }\n        acc[chainId].add(cur.id);\n      });\n\n      return acc;\n    }, {});\n  }, [protocols]);\n\n  const [chainProtocols, chainTags, searchProtocolsByTag] = useMemo(() => {\n    let subProtocols = protocols || [];\n\n    if (selectedChainId) {\n      const protocolIdsOnSelectedChain =\n        searchProtocolsByChain[selectedChainId];\n      protocolIdsOnSelectedChain &&\n        (subProtocols = subProtocols.filter((i) =>\n          protocolIdsOnSelectedChain.has(i.id)\n        ));\n    }\n\n    const lookup = subProtocols.reduce<Record<string, Set<string>>>(\n      (acc, cur) => {\n        cur.tags?.forEach((tag: string) => {\n          tag = tag.toLowerCase();\n          if (!acc[tag]) {\n            acc[tag] = new Set();\n          }\n          acc[tag].add(cur.id);\n        });\n        return acc;\n      },\n      {}\n    );\n\n    const tagSet = new Set(Object.keys(lookup));\n    const subTags = (tags || []).filter((i) => tagSet.has(i.id));\n\n    return [subProtocols, subTags, lookup];\n  }, [selectedChainId, searchProtocolsByChain, protocols, tags]);\n\n  const onFilterChanged = useCallback(\n    (filterType: string, val: string) => {\n      if (filterType === \"tag\") {\n        const protocolIds = Array.from(searchProtocolsByTag[val] || []);\n        updatePoolsArg({ protocolId: protocolIds });\n      } else if (filterType === \"protocol\") {\n        updatePoolsArg({ protocolId: val });\n      } else if (filterType === \"investTokenType\") {\n        updatePoolsArg({\n          investTokenType: val as \"single\" | \"multi\" | undefined,\n        });\n      }\n    },\n    [updatePoolsArg, searchProtocolsByTag]\n  );\n\n  const onSortChanged = useCallback(\n    (sortType: string, val: string) => {\n      let apyAsc: boolean | undefined = undefined;\n      let tvlAsc: boolean | undefined = undefined;\n\n      if (sortType === \"apy\") {\n        apyAsc = val === \"asc\";\n      } else if (sortType === \"tvl\") {\n        tvlAsc = val === \"asc\";\n      }\n      updatePoolsArg({ apyAsc: apyAsc, tvlAsc });\n    },\n    [updatePoolsArg]\n  );\n\n  const onPageIndexChanged = useCallback(\n    (pageIndex) => {\n      updatePoolsArg({ pageIndex });\n    },\n    [updatePoolsArg]\n  );\n\n  const onPageSizeChanged = useCallback(\n    (pageSize) => {\n      updatePoolsArg({ pageSize });\n    },\n    [updatePoolsArg]\n  );\n\n  const onSearchSubmit = useCallback(\n    (protocolId: string) => {\n      protocolId = protocolId || \"\";\n      protocolId = protocolId.toLowerCase();\n      updatePoolsArg({ protocolId });\n    },\n    [updatePoolsArg]\n  );\n\n  return {\n    chainsLookup,\n    protocolsLookup,\n    selectedChainId,\n    chains: chains || [],\n    tokens: [],\n    tags: chainTags,\n    protocols: chainProtocols,\n    isFetchingPools,\n    poolsResult,\n    onChainChanged,\n    onFilterChanged,\n    onSortChanged,\n    pageIndex: poolsArg?.pageIndex || 0,\n    pageSize: poolsArg?.pageSize || 25,\n    onPageSizeChanged,\n    onPageIndexChanged,\n    onSearchSubmit,\n  };\n};\n\nconst MVP = () => {\n  const {\n    chainsLookup,\n    protocolsLookup,\n    selectedChainId,\n    chains,\n    tokens,\n    tags,\n    protocols,\n    isFetchingPools,\n    poolsResult,\n    onChainChanged,\n    onFilterChanged,\n    onSortChanged,\n    pageIndex,\n    pageSize,\n    onPageSizeChanged,\n    onPageIndexChanged,\n    onSearchSubmit,\n  } = useBusiness();\n\n  return (\n    <>\n      <Header\n        selectedChainId={selectedChainId}\n        chains={chains || []}\n        onChainChanged={onChainChanged}\n        onSearchSubmit={onSearchSubmit}\n      />\n      <Box marginTop={20} />\n      <Content\n        chainsLookup={chainsLookup}\n        protocolsLookup={protocolsLookup}\n        selectedChainId={selectedChainId}\n        tokens={tokens}\n        tags={tags}\n        protocols={protocols}\n        isFetchingPools={isFetchingPools}\n        poolsResult={poolsResult}\n        onFilterChanged={onFilterChanged}\n        onSortChanged={onSortChanged}\n        pageIndex={pageIndex}\n        pageSize={pageSize}\n        onPageIndexChange={onPageIndexChanged}\n        onPageSizeChanged={onPageSizeChanged}\n      />\n      <Box marginBottom={16} />\n    </>\n  );\n};\n\nexport default MVP;\n","import React from \"react\";\nimport MVP from \"./pages/mvp\";\n\nfunction App() {\n  return <MVP />;\n}\n\nexport default App;\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport * as pumpkinApi from \"./pumpkin-api\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\n\nexport const store = configureStore({\n  reducer: {\n    [pumpkinApi.NAMESPACE]: pumpkinApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    pumpkinApi.middleware,\n  ],\n});\n\nsetupListeners(store.dispatch);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { store } from \"./redux/store\";\n\nconst darkModeTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: \"#1890FF\",\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={darkModeTheme}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}